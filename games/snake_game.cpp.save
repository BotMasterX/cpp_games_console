// in lucru
#include <bits/stdc++.h>
#include <stdlib.h>
#include <time.h>
#include <conio.h>
#include <stdio.h>
using namespace std;

char mat[10][20];
bool mat2[10][20] ={false};
vector <pair<int,int> > 
pair <int,int> food_position;

bool take_food(int i, int j)
{
    if(mat[i][j] == '~')
        return true;
    return false;
}

bool defeat(int coordi, int coordj)
{
    if(coordi == 0 || coordi == 11 || coordj == 0 || coordj == 21 || mat2[coordi][coordj] == true)
        return true;
    return false;
}

void snake_work(int &dead, int &i, int &j)
{
    char c;
    c = getche();
    if(c == 'w')
        if(defeat(i - 1,j) == true)
            dead = 1;
        else
        {
            mat2[i][j] = false;
            mat[i][j] = ' ';
            i--;
            mat2[i][j] = true;
            mat[i][j] = 'O';
        }
    else if(c == 'a')
        if(defeat(i,j - 1))
            dead = 1;
        else
        {
            mat2[i][j] = false;
            mat[i][j] = ' ';
            j--;
            mat2[i][j] = true;
            mat[i][j] = 'O';

        }
    else if(c == 's')
        if(defeat(i + 1,j))
            dead = 1;
        else
        {
            mat2[i][j] = false;
            mat[i][j] = ' ';
            i++;
            mat2[i][j] = true;
            mat[i][j] = 'O';

        }
    else if(c == 'd')
        if(defeat(i,j + 1))
            dead = 1;
        else
        {
            mat2[i][j] = false;
            mat[i][j] = ' ';
            j++;
            mat2[i][j] = true;
            mat[i][j] = 'O';
        }
}

void start(int &i, int &j)
{
    i = rand() % 10 + 1;
    j = rand() % 20 + 1;
    mat[i][j] = 'O';
    mat2[i][j] = true;
}

void init()
{
  for (int i = 1; i <= 10; i++)
    for (int j = 1; j <= 20; j++)
      mat[i][j] = ' ';
}

void draw()
{
  cout << endl;
  int col = 1;
  int lin = 1;
  while(lin <= 10)
  {
    cout << " ";
    if(lin == 1)
      for(int i = 1; i <= 43 * 2 - 3; i++)
        cout << "/";
        cout << endl;
    for (int i = 1; i <= 20; i++){
        if(i == 1)
            cout << " /| " << mat[lin][col++];
        else
            cout << " | " <<  mat[lin][col++];
    }
    cout << " |/" << endl;
    cout << " ";

    for (int i = 1; i <= 43 * 2 - 3; i++){
        if(i == 1 || i == 2)
            cout << "/";
        else if(i < 43 * 2 - 4)
            cout << "-";
        else
            cout << "/";
    }
    lin++;
    col = 1;
  }

    cout << endl << " ";
    for (int i = 1; i <= 43 * 2 - 3; i++)
        cout << "/";
    cout << endl;
}

int main()
{
    int l,c;
    cout << "w - up, a - left, s - down, d - right" << endl;
    system("Color 3");
    do{
        cout << "PRESS ENTER!!!" << endl;
    }while(cin.get() != '\n');

    system("cls");

    init();
    start(l,c);
    int foods = 0;
    while(1){
        
        while(1)
        {

            int generating_lin = rand() % 10 + 1;
            int generating_col = rand() % 20 + 1;
            if(mat2[generating_lin][generating_col] == false)
            {
                food_position.first = generating_lin;
                food_position.second = generating_col;
                break;
            }
        }
        mat[food_position.first][food_position.second] = '~';
        cout << "POINT = " << foods;
        draw();
        int dead = 0;
        cout << endl;
        while(1)
        {
            system("cls");
            cout << "POINT = " << foods;
            draw();
            snake_work(dead,l,c);
            if(dead == 1)
            {
                system("cls");
                cout << "YOU LOSE";
                return 0;
            }
            if(take_food(l,c) == true)
                break;
        }
        foods++;
    }

}

